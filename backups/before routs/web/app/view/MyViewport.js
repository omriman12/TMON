/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */
Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.selection.CheckboxModel'
]);
var sm = Ext.create('Ext.selection.CheckboxModel');

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    layout: {
        type: 'border'
    },

    initComponent: function() {
        var me = this;

        function Handler1(value) { 
              return '<span style="color:' + '#73b51e' + ';">' + value + '</span>';
        };

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    region: 'west',
                    id: 'MenuPanelID',
                    width: 255,
                    layout: {
                        type: 'accordion'
                    },
                    collapsed: true,
                    collapsible: true,
                    title: 'תפריט',
                    items: [
                        {
                            xtype: 'form',
                            width: 148,
                            layout: {
                                align: 'stretch',
                                type: 'vbox'
                            },
                            collapsed: false,
                            title: 'מחירונים',
                            dockedItems: [
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    dock: 'top',
                                    id: 'txtPrefixID',
                                    margin: 10,
                                    fieldLabel: 'Prefix',
                                    labelWidth: 50
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    dock: 'top',
                                    margin: 10,
                                    text: 'חפש',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnPrefixSearchClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            width: 148,
                            layout: {
                                align: 'stretch',
                                type: 'vbox'
                            },
                            collapsed: false,
                            title: 'הצעות מחיר',
                            dockedItems: [
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    dock: 'top',
                                    id: 'bidOperatorPrefixID',
                                    margin: 10,
                                    fieldLabel: 'operator prefix',
                                    labelWidth: 100
                                },
                                {
                                    xtype: 'textfield',
                                    flex: 1,
                                    dock: 'top',
                                    id: 'bidCountryPrefixID',
                                    margin: 10,
                                    fieldLabel: 'country prefix',
                                    labelWidth: 100
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    dock: 'top',
                                    margin: 10,
                                    text: 'התחל הצעת מחיר',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnStartBiddingClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    dock: 'top',
                                    margin: 10,
                                    text: 'הצג היסטורית הצעות',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnBiddingHistoryClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            width: 148,
                            layout: {
                                align: 'stretch',
                                type: 'vbox'
                            },
                            collapsed: false,
                            title: 'ראוטים'
                        }
                    ]
                },
                {
                    xtype: 'tabpanel',
                    region: 'center',
                    id: 'MainTabPanelID',
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'panel',
                            layout: {
                                type: 'border'
                            },
                            title: 'General',
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            id: 'btnRefreshId',
                                            icon: 'images/refresh16x16.png',
                                            text: 'רענון',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnRefreshMainClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ],
                            items: [
                                {
                                    xtype: 'container',
                                    region: 'center',
                                    layout: {
                                        align: 'stretch',
                                        type: 'vbox'
                                    },
                                    items: [
                                        {
                                            xtype: 'gridpanel',
                                            flex: 1,
                                            autoScroll: true,
                                            title: 'שיחות נכנסות',
                                            store: 'IncomingDataStore',
                                            viewConfig: {
                                                id: 'IncomingGridId'
                                            },
                                            columns: [
                                                {
                                                    xtype: 'gridcolumn',
                                                    dataIndex: 'trunk_owner',
                                                    text: 'Owner'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    dataIndex: 'country_name',
                                                    text: 'Country'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    dataIndex: 'country_code',
                                                    text: 'Code'
                                                },
                                                {
                                                    xtype: 'numbercolumn',
                                                    align: 'right',
                                                    dataIndex: 'operator_prefix',
                                                    text: 'Operator Prefix',
                                                    format: '00'
                                                },
                                                {
                                                    xtype: 'numbercolumn',
                                                    align: 'right',
                                                    dataIndex: 'call_duration',
                                                    text: 'Duration Hourly',
//                                                    format: '0,000'
                                                },
                                                {
                                                    xtype: 'numbercolumn',
                                                    align: 'right',
                                                    dataIndex: 'acd',
                                                    text: 'ACD Hourly'
                                                },
                                                {
                                                    xtype: 'numbercolumn',
                                                    align: 'right',
                                                    dataIndex: 'asr',
                                                    text: 'ASR Hourly'
                                                },
                                                {
                                                    xtype: 'numbercolumn',
                                                    align: 'right',
                                                    dataIndex: 'calls',
                                                    text: 'Calls Hourly',
                                                    format: '0,000'
                                                }
                                            ],
                                            listeners:  {
                                                celldblclick: {
                                                    fn: me.onIncomingGridpanelCellDblClick,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'gridpanel',
                                            flex: 2,
                                            autoScroll: true,
                                            title: 'שיחות יוצאת',
                                            store: 'OutgoingDataStore',
                                            viewConfig: {
                                                getRowClass: function(record, rowIndex, rowParams, store) {
                                                    var acd_h = record.get('acd_h');
                                                    var acd_m = record.get('acd_m');

                                                    //console.log('Cheking!!! ACD_H:' + acd_h + ' < ACD_M:' + acd_m);

                                                    if (acd_h < acd_m - 1){
                                                        return 'price-fall';
                                                    }

                                                },
                                                draggable: false,
                                                id: 'OutGoingGridId'
                                            },
                                            columns: [
                                                {
                                                    xtype: 'gridcolumn',
                                                    dataIndex: 'country_name',
                                                    text: 'Country'
                                                },
                                                {
                                                    xtype: 'numbercolumn',
                                                    width: 50,
                                                    align: 'right',
                                                    dataIndex: 'country_code',
                                                    text: 'Code',
                                                    format: '0,000'
                                                },
                                                {
                                                    xtype: 'numbercolumn',
                                                    width: 100,
                                                    align: 'right',
                                                    dataIndex: 'operator_prefix',
                                                    text: 'Operator Prefix',
                                                    format: '00'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    align: 'right',
                                                    dataIndex: 'call_duration_h',
                                                    text: 'Duration Hourly',
//                                                    renderer : 
//                                                        function(value) {
////                                                        if (value*(-1) > 0) {
////                                                            return '<span style="color:' + '#73b51e' + ';">' + value + '</span>';
////                                                        } else if (value*(-1) < 0) {
////                                                            return '<span style="color:' + '#cf4c35' + ';">' + value + '</span>';
////                                                        }
//                                                        return Handler1(value);}
                                                   
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    align: 'right',
                                                    dataIndex: 'call_duration_m',
                                                    text: 'Duration Monthly'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    hidden: true,
                                                    dataIndex: 'priority',
                                                    text: 'Priority'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    align: 'right',
                                                    dataIndex: 'acd_h',
                                                    text: 'ACD Hourly'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    align: 'right',
                                                    dataIndex: 'acd_m',
                                                    text: 'ACD Monthly'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    align: 'right',
                                                    dataIndex: 'asr_h',
                                                    text: 'ASR Hourly'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    align: 'right',
                                                    dataIndex: 'asr_m',
                                                    text: 'ASR Monthly'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    align: 'right',
                                                    dataIndex: 'calls_h',
                                                    text: 'Calls hourly'
                                                },
                                                {
                                                    xtype: 'gridcolumn',
                                                    align: 'right',
                                                    dataIndex: 'calls_m',
                                                    text: 'Calls Monthly'
                                                }
                                            ],
                                            listeners: {
                                                celldblclick: {
                                                    fn: me.onOutcomingGridpanelCellDblClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onBtnPrefixSearchClick: function(button, e, options) {
        var checkBoxPrefixes = Ext.create('Ext.selection.CheckboxModel');
        var val = Ext.getCmp('txtPrefixID').value;
        var v_url = 'GetCountryPrefixes.jsp?' + Ext.urlEncode({'prefix': val});
        var me = this;
        var newTab = Ext.create('Ext.panel.Panel', {
            id: 'prefix_panel',
            title: 'Price Usage Report',
            autoScroll: true,
            layout: {
                type: 'fit'
            },
            closable: true,
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            id: 'buttonBiding',
                            icon: 'images/dollar16x16.png',
                            text: 'הוסף להצעת מחיר',
                            listeners: {
                                click: {
                                    fn: me.onBtnAddToBidClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items:  [{
                id: 'prefix_grid',
                xtype: 'gridpanel',
                autoShow: false,
                autoScroll: true,
                selModel: checkBoxPrefixes,
                store:  Ext.create('Ext.data.Store', {
                    fields: [
                        /*
                    {name: 'trunk_owner'},
                    {name: 'prefix', type: 'int', sortType: 'asInt'},
                    {name: 'rate', type: 'float', sortType: 'asFloat'},
                    {name: 'currency'},
                    {name: 'acd', type: 'int', sortType: 'asInt'},
                    {name: 'asr', type: 'int', sortType: 'asInt'}
                            
                                    "   stat_data,                                      \n" + 
        "   country_code,                                   \n" + 
        "   prefix,                                         \n" + 
        "   operator_desc,                                  \n" + 
        "   vendor_name,                                    \n" + 
        "   rate,                                           \n" + 
        "   currency,                                       \n" + 
        "   minutes,                                        \n" + 
        "   acd,                                            \n" + 
        "   round((100/(calls+cnt2))*calls,2) asr           \n" + 
                            */
                    {name: 'price_date', type: 'Date' , sortType: 'asDate', format: 'Y-m-d h:M:s'},
                    {name: 'country_code',type: 'int', sortType: 'asInt'},
                    {name: 'prefix',type: 'int', sortType: 'asInt'},
                    {name: 'vendor_name'},
                    {name: 'rate', type: 'float', sortType: 'asFloat'},
                    {name: 'currency'},
                    {name: 'quality', type: 'int', sortType: 'asInt'},
                    {name: 'duration',type: 'int', sortType: 'asInt'},
                    {name: 'acd', type: 'float', sortType: 'asFloat'}
                    ],
                    proxy: {
                        type: 'ajax',
                        timeout: 120000,
                        url: v_url,
                        reader: {
                            type: 'json',
                            root: 'data',
                            successProperty: 'success'
                        }
                    },
                    autoLoad: true
                }),
                title: 'Price Reprort for "' + val + '" - Monthly' ,
                columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'price_date',
                    width: 80,
                    text: 'Date',
                    renderer: Ext.util.Format.dateRenderer('Y-m-d')
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'country_code',
                    text: 'Counry Code',
                    width: 80
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'prefix',
                    text: 'Prefix',
                    width: 80
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'vendor_name',
                    width: 100,
                    text: 'Vendor Name'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'currency',
                    width: 100,
                    text: 'Currency'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'rate',
                    width: 50,
                    text: 'Rate'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'quality',
                    width: 50,
                    text: 'Quality'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'duration',
                    width: 100,
                    text: 'Duration'                    
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'acd',
                    width: 100,
                    text: 'ACD'
                }
                ]
            }]
        });

        var panel = Ext.getCmp("MainTabPanelID");
        panel.remove('prefix_panel');
        panel.add(newTab).show();

    },
            
    onBtnRefreshMainClick: function(button, e, options) {
        var grid = Ext.getCmp('OutGoingGridId');
        grid.getStore().reload();
        var grid2 = Ext.getCmp('IncomingGridId');
        grid2.getStore().reload();
        // IncomingGridId
    },
            
    onBtnAddToBidClick: function(button, e, options){
        var me = this;
        var grid = Ext.getCmp('prefix_grid');
        var checkboxSelection = grid.getSelectionModel().getSelection();
        var v_url = 'GetBiddingRows.jsp'; //+ Ext.urlEncode({'prefix': val});
        var temp = '';
        for (i=0; i<=checkboxSelection.length-1; i++){
            temp = temp + checkboxSelection[i].get('vendor_name') + "," + 
                          checkboxSelection[i].get('country_code') + "," +
                          checkboxSelection[i].get('prefix') + "," +
                          checkboxSelection[i].get('currency') + "," +
                          checkboxSelection[i].get('rate') + "," +
                          checkboxSelection[i].get('quality') +
                            ";";
        }
//        alert(temp);
        
        var prefixFinnalBidCheckBox = Ext.create('Ext.selection.CheckboxModel');

        Ext.Ajax.request({
            url: 'AjaxActions.jsp',
            method : 'Post', 
            params: {
                action: 'add_to_bid',
                grid_vars: temp
            }
        });
        
        alert("Added To Bid!");
    },
            
    onBtnStartBiddingClick: function(button, e, options){
        var me = this;
        var checkBoxBidTab = Ext.create('Ext.selection.CheckboxModel');
        var v_url = 'GetBiddingRows.jsp'; 
        
        Ext.Ajax.request({
            url: 'AjaxActions.jsp',
            method : 'Post', 
            params: {
                action: 'reset_temp_bid'
            }
        });
        
        var newTab = Ext.create('Ext.panel.Panel', {
            id: 'bidding_panel',
            title: 'Bidding',
            autoScroll: true,
            layout: {
                type: 'fit'
            },
            closable: true,
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            id: 'btnRefreshBidId',
                            icon: 'images/refresh16x16.png',
                            text: 'רענון',
                            listeners: {
                                click: {
                                    fn: me.onBtnRefreshBidClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'buttonResetBid',
                            icon: 'images/dollar16x16.png',
                            text: 'אפס הצעת מחיר',
                            listeners: {
                                click: {
                                    fn: me.onBtnResetBidClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'buttonFinishBid',
                            icon: 'images/dollar16x16.png',
                            text: 'סיום הצעת מחיר',
                            listeners: {
                                click: {
                                    fn: me.onBtnFinishBiddingClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items:  [{
                id: 'bidding_grid',
                xtype: 'gridpanel',
                //title: 'FinnishBid',
                autoShow: false,
                autoScroll: true,
                selModel: checkBoxBidTab,
                store:  Ext.create('Ext.data.Store', {
                    fields:[
                    {name: 'rate_date', type: 'Date' , sortType: 'asDate', format: 'Y-m-d h:M:s'},
                    {name: 'country_code', type: 'int', sortType: 'asInt'},
                    {name: 'operator_prefix', type: 'int', sortType: 'asInt'},
                    {name: 'vendor_name'},
                    {name: 'currency'},
                    {name: 'buy_rate', type: 'float', sortType: 'asFloat'},
                    {name: 'sell_rate', type: 'float', sortType: 'asFloat'},
                    {name: 'quality', type: 'int', sortType: 'asInt'}
                    ],
                    proxy: {
                        type: 'ajax',
                        timeout: 120000,
                        url: v_url,
                        reader: {
                            type: 'json',
                            root: 'data',
                            successProperty: 'success'
                        }
                    },
                    autoLoad: true
                }),
                plugins: [
                    Ext.create('Ext.grid.plugin.RowEditing', {
                        clicksToEdit: 2
                    })
                ],
                columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'rate_date',
                    width: 80,
                    text: 'Date',
                    renderer: Ext.util.Format.dateRenderer('Y-m-d')
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'country_code',
                    width: 100,
                    text: 'Country Code'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'operator_prefix',
                    width: 150,
                    text: 'Operator Prefix'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'vendor_name',
                    width: 100,
                    text: 'Vendor Name'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'currency',
                    width: 100,
                    text: 'Currency'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'buy_rate',
                    width: 70,
                    text: 'Buy Rate'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'sell_rate',
                    width: 70,
                    text: 'Sell Rate',
                    editor: 'textfield'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'quality',
                    width: 50,
                    text: 'Quality'
                }]
            }]
        });
        
        var panel = Ext.getCmp("MainTabPanelID");
        panel.remove('bidding_panel');
        panel.add(newTab).show();

    },
            
    onBtnResetBidClick: function(button, e, options){
        Ext.Ajax.request({
            url: 'AjaxActions.jsp',
            method : 'Post', 
            params: {
                action: 'reset_temp_bid'
            }
        });
        
        var grid = Ext.getCmp('bidding_grid');
        grid.getStore().reload();
        
    },
            
    onBtnFinishBiddingClick: function(button, e, options){
        var grid = Ext.getCmp('bidding_grid');
        var checkboxSelection = grid.getSelectionModel().getSelection();
        var biddingOperatorPrefix = Ext.getCmp('bidOperatorPrefixID').value;
        var biddingCountryCode = Ext.getCmp('bidCountryPrefixID').value;
        var temp = '';
        for (i=0; i<=checkboxSelection.length-1; i++){
            temp = temp + checkboxSelection[i].get('country_code') + "," +
                          checkboxSelection[i].get('operator_prefix') + "," +
                          checkboxSelection[i].get('vendor_name') + "," + 
                          checkboxSelection[i].get('currency') + "," +
//                          checkboxSelection[i].get('buy_rate') + "," +
                          checkboxSelection[i].get('sell_rate') + "," +
                          checkboxSelection[i].get('quality') +
                            ";";
        }
        
        Ext.Ajax.request({
            url: 'AjaxActions.jsp',
            method : 'Post', 
            params: {
                action: 'create_and_send_excel',
                grid_vars: temp,
                bidding_operator_prefix: biddingOperatorPrefix,
                bidding_country_code: biddingCountryCode
            }
        });
        alert("Bid Sent To Email");
    },
            
    onBtnRefreshBidClick: function(button, e, options) {
        var grid = Ext.getCmp('bidding_grid');
        grid.getStore().reload();
    },
            
    onBtnDeleteBidRowClick: function(button, e, options){
        Ext.Ajax.request({
            url: 'AjaxActions.jsp',
            method : 'Post', 
            params: {
                action: 'delete_bid_row',
                var: '' // to finish!
            }
        });
        
        var grid = Ext.getCmp('bidding_grid');
        grid.getStore().reload();
        
    },
            
    onBtnBiddingHistoryClick: function(button, e, options){
        var me = this;
        var checkBoxBidHistoryTab = Ext.create('Ext.selection.CheckboxModel');
        var biddingOperatorPrefix = Ext.getCmp('bidOperatorPrefixID').value;
        var biddingCountryCode = Ext.getCmp('bidCountryPrefixID').value;
        var v_url = 'GetBiddingHistory.jsp?' + Ext.urlEncode({'bid_operator_country_code': biddingCountryCode, 'bid_operator_prefix' : biddingOperatorPrefix} );

        var newTab = Ext.create('Ext.panel.Panel', {
            id: 'bidding_history_panel',
            title: 'Bidding History',
            autoScroll: true,
            layout: {
                type: 'fit'
            },
            closable: true,
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            id: 'btnRefreshBidHistoryId',
                            icon: 'images/refresh16x16.png',
                            text: 'רענון',
                            listeners: {
                                click: {
                                    fn: me.onBtnRefreshHistoryBiddingClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnApprovedBidId',
                            icon: 'images/V16x16.png',
                            text: 'מאושר',
                            listeners: {
                                click: {
                                    fn: me.onbtnApproveBidClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnNotApprovedBidId',
                            icon: 'images/X16-16.png',
                            text: 'לא מאושר',
                            listeners: {
                                click: {
                                    fn: me.onbtnNotApproveBidClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            id: 'btnSaveBiddingHistoryId',
                            icon: 'images/save.png',
                            text: 'עדכן Route',
                            listeners: {
                                click: {
                                    fn: me.onbtnSaveBiddingHistoryClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items:  [{
                id: 'bidding_history_grid',
                xtype: 'gridpanel',
                autoShow: false,
                autoScroll: true,
                selModel: checkBoxBidHistoryTab,
                plugins: [
                    Ext.create('Ext.grid.plugin.RowEditing', {
                        clicksToEdit: 2
                    })
                ],
                store:  Ext.create('Ext.data.Store', {
                    fields:[
                    {name: 'bid_id', type: 'int', sortType: 'asInt'},
                    {name: 'bid_date', type: 'Date' , sortType: 'asDate', format: 'Y-m-d h:M:s'},
                    {name: 'bid_approved'},
                    {name: 'route'}
                    ],
                    proxy: {
                        type: 'ajax',
                        timeout: 120000,
                        url: v_url,
                        reader: {
                            type: 'json',
                            root: 'data',
                            successProperty: 'success'
                        }
                    },
                    autoLoad: true
                }),
//                listeners:  {
//                    celldblclick: {
//                        fn: me.onBidHistoryGridDblClick,
//                        scope: me
//                    }
//                },
                columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'bid_id',
                    width: 70,
                    text: 'Bid Id'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'bid_date',
                    width: 100,
                    text: 'Bid Date',
                    renderer: Ext.util.Format.dateRenderer('Y-m-d')
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'bid_approved',
                    width: 100,
                    text: 'Approved'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'route',
                    width: 150,
                    editor: 'textfield',
                    text: 'Route',
                },
                {
                xtype: 'actioncolumn',
                width: 30,
                sortable: false,
                menuDisabled: true,
                items: [{
                    icon: 'images/glass.png',
                    scope: this,
                    handler: this.onGridBidHistoryClick
                }]
                }
                ]
            }]
        });
        
        var panel = Ext.getCmp("MainTabPanelID");
        panel.remove('bidding_history_panel');
        panel.add(newTab).show();
    },
            
    onbtnApproveBidClick: function(button, e, options){
        var grid = Ext.getCmp('bidding_history_grid');
        var checkboxSelection = grid.getSelectionModel().getSelection();
        var biddingOperatorPrefix = Ext.getCmp('bidOperatorPrefixID').value;
        var biddingCountryCode = Ext.getCmp('bidCountryPrefixID').value;
        var temp = '';
        for (i=0; i<=checkboxSelection.length-1; i++){
            temp = temp + checkboxSelection[i].get('bid_id') +  
                    ";";
        }

        Ext.Ajax.request({
            url: 'AjaxActions.jsp',
            method : 'Post', 
            params: {
                action: 'approve_bids',
                approved: 'YES',
                bidding_country_code: biddingCountryCode,
                bidding_operator_prefix: biddingOperatorPrefix,
                grid_vars: temp 
            }
        });
        
        alert('Bid Changed To Approved');
//        var grid = Ext.getCmp('bidding_history_grid');
//        grid.getStore().reload();
        
    },
            
    onbtnNotApproveBidClick: function(button, e, options){
        var grid = Ext.getCmp('bidding_history_grid');
        var checkboxSelection = grid.getSelectionModel().getSelection();
        var temp = '';
        for (i=0; i<=checkboxSelection.length-1; i++){
            temp = temp + checkboxSelection[i].get('bid_id') +  
                    ";";
        }

        Ext.Ajax.request({
            url: 'AjaxActions.jsp',
            method : 'Post', 
            params: {
                action: 'approve_bids',
                approved: 'NO',
                grid_vars: temp 
            }
        });
        alert('Bid Changed To Not Approved');
    },
            
    onBtnRefreshHistoryBiddingClick: function(button, e, options) {
        var grid = Ext.getCmp('bidding_history_grid');
        grid.getStore().reload();
    },
            
    onGridBidHistoryClick: function(view, rowIndex, colIndex, item, e, record){
        var me = this;
        var bid_id = record.get('bid_id');
        var v_url = 'GetBid.jsp?' + Ext.urlEncode({'bid_id': bid_id} );
        
        
        var newTab = Ext.create('Ext.panel.Panel', {
            id: 'bid_hitory_panel',
            title: 'Bid ID ' + bid_id,
            autoScroll: true,
            layout: {
                type: 'fit'
            },
            closable: true,
            items:  [{
                id: 'bid_hitory_grid',
                xtype: 'gridpanel',
                autoShow: false,
                autoScroll: true,
                store:  Ext.create('Ext.data.Store', {
                    fields:[
                    {name: 'rate_date', type: 'Date' , sortType: 'asDate', format: 'Y-m-d h:M:s'},
                    {name: 'country_code', type: 'int', sortType: 'asInt'},
                    {name: 'operator_prefix', type: 'int', sortType: 'asInt'},
                    {name: 'vendor_name'},
                    {name: 'currency'},
                    {name: 'sell_rate', type: 'float', sortType: 'asFloat'},
                    {name: 'quality', type: 'int', sortType: 'asInt'}
                    ],
                    proxy: {
                        type: 'ajax',
                        timeout: 120000,
                        url: v_url,
                        reader: {
                            type: 'json',
                            root: 'data',
                            successProperty: 'success'
                        }
                    },
                    autoLoad: true
                }),
                columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'rate_date',
                    width: 80,
                    text: 'Date',
                    renderer: Ext.util.Format.dateRenderer('Y-m-d')
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'country_code',
                    width: 100,
                    text: 'Country Code'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'operator_prefix',
                    width: 100,
                    text: 'Operator Prefix'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'vendor_name',
                    width: 100,
                    text: 'Vendor Name'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'currency',
                    width: 100,
                    text: 'Currency'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'sell_rate',
                    width: 70,
                    text: 'Sell Rate'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'quality',
                    width: 50,
                    text: 'Quality'
                }]
            }]
        });
        
        var panel = Ext.getCmp("MainTabPanelID");
        //panel.remove('bid_hitory_panel');
        panel.add(newTab).show();
    },        
            
    onbtnSaveBiddingHistoryClick: function(button, e, options){
        var grid = Ext.getCmp('bidding_history_grid');
        var checkboxSelection = grid.getSelectionModel().getSelection();
        var temp = '';
        for (i=0; i<=checkboxSelection.length-1; i++){
            temp = temp + checkboxSelection[i].get('route') + ","  +
                    checkboxSelection[i].get('bid_id')  +
                    ";";
        }

        Ext.Ajax.request({
            url: 'AjaxActions.jsp',
            method : 'Post', 
            params: {
                action: 'update_bid',
                grid_vars: temp 
            }
        });
        alert('Route Updated');
    },       
            
            
    onIncomingGridpanelCellDblClick: function(tablepanel, td, cellIndex, record, tr, rowIndex, e, options) {
        var title =  record.getData().country_name + '(' + record.getData().country_desc + ') " - Today';
        var v_url = 'GetIncomingDetails.jsp?' + Ext.urlEncode({'country_code': record.getData().country_code, 'operator_prefix' : record.getData().operator_prefix, 'owner_in' : record.getData().trunk_owner} );
        var newTab = Ext.create('Ext.panel.Panel', {
            title: title,
            autoScroll: true,
            layout: {
                type: 'fit'
            },
            closable: true,
            items:  [{
                xtype: 'gridpanel',
                autoShow: false,
                autoScroll: true,
                store:  Ext.create('Ext.data.Store', {
                    fields: [
                    {name: 'call_date'},
                    {name: 'owner_in'},
                    {name: 'trunk_in'},           
                    {name: 'owner_out'},
                    {name: 'trunk_out'},
                    {name: 'acd', type: 'float'},
                    {name: 'asr', type: 'float'},
                    {name: 'calls', type: 'int'}
                    ],
                    proxy: {
                        type: 'ajax',
                        timeout: 120000,
                        url: v_url,
                        reader: {
                            type: 'json',
                            root: 'data',
                            successProperty: 'success'
                        }
                    },
                    autoLoad: true
                }),
                title: 'Incoming information for "' + record.getData().country_name + '" - Today' ,
                /*
                viewConfig: {

                getRowClass: function(record, rowIndex, rowParams, store) {
                var acd_h = record.get('acd_h');
                var acd_m = record.get('acd_m');
                if (acd_h < acd_m - 1){
                return 'price-fall';
                }
                }
                },

                call_date
                owner_in
                trunk_in
                owner_out
                trunk_out
                acd
                asr
                calls

                */
                columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'call_date',
                    width: 150,
                    text: 'Call Date'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'owner_in',
                    width: 150,
                    align: 'right',
                    text: 'Owner IN'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'trunk_in',
                    align: 'right',
                    width: 200,
                    text: 'Trunk in'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'owner_out',
                    width: 150,
                    align: 'right',
                    text: 'Owner OUT'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'trunk_out',
                    align: 'right',
                    width: 200,
                    text: 'Trunk OUT'
                },
                {
                    xtype: 'gridcolumn',
                    align: 'right',
                    dataIndex: 'acd',
                    width: 50,
                    text: 'ACD'
                },
                {
                    xtype: 'gridcolumn',
                    align: 'right',
                    dataIndex: 'asr',
                    width: 50,
                    text: 'ASR'
                },
                {
                    xtype: 'gridcolumn',
                    align: 'right',
                    dataIndex: 'calls',
                    width: 50,
                    text: 'Calls'
                }]
            }]
        });

        var panel = Ext.getCmp("MainTabPanelID");
        panel.add(newTab).show();

    },
            
    onOutcomingGridpanelCellDblClick: function(tablepanel, td, cellIndex, record, tr, rowIndex, e, options) {
        var title =  record.getData().country_name + '(' + record.getData().country_desc + ') " - Today';
        var v_url = 'GetOutgoingDetails.jsp?' + Ext.urlEncode({'country_code': record.getData().country_code, 'operator_prefix' : record.getData().operator_prefix} );
        var newTab = Ext.create('Ext.panel.Panel', {
            title: title,
            autoScroll: true,
            layout: {
                type: 'fit'
            },
            closable: true,
            items:  [{
                xtype: 'gridpanel',
                autoShow: false,
                autoScroll: true,
                store:  Ext.create('Ext.data.Store', {
                    fields: [
                    {name: 'call_date'},
                    {name: 'trunk_owner'},
                    {name: 'trunk_out'},
                    {name: 'acd_h', type: 'float'},
                    {name: 'acd_m', type: 'float'},
                    {name: 'asr_h', type: 'int'},
                    {name: 'asr_m', type: 'int'},
                    {name: 'mins_h', type: 'int'},
                    {name: 'mins_m', type: 'int'}
                    ],
                    proxy: {
                        type: 'ajax',
                        timeout: 120000,
                        url: v_url,
                        reader: {
                            type: 'json',
                            root: 'data',
                            successProperty: 'success'
                        }
                    },
                    autoLoad: true
                }),
                title: 'General Data for "' + record.getData().country_name + '" - Today' ,
                viewConfig: {
                    getRowClass: function(record, rowIndex, rowParams, store) {
                        var acd_h = record.get('acd_h');
                        var acd_m = record.get('acd_m');
                        if (acd_h < acd_m - 1){
                            return 'price-fall';
                        }
                    }
                },
                columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'call_date',
                    width: 150,
                    text: 'Hour'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'trunk_owner',
                    width: 150,
                    text: 'Trunk Owner'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'trunk_out',
                    width: 200,
                    text: 'Trunk Out'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'acd_h',
                    width: 70,
                    text: 'ACD Hourly'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'acd_m',
                    width: 70,
                    text: 'ACD Monthly'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'asr_h',
                    width: 70,
                    text: 'ASR Hourly'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'asr_m',
                    width: 70,
                    text: 'ASR Monthly'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'mins_h',
                    width: 70,
                    text: 'Minutes H'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'mins_m',
                    width: 70,
                    text: 'Minutes M'
                }]
            }]
        });

        var panel = Ext.getCmp("MainTabPanelID");
        panel.add(newTab).show();

    }
    
});